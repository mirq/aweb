#ifndef AWEBTCP_INTERFACE_DEF_H
#define AWEBTCP_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 50.13.
** Do not edit
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef SYS_SOCKET_H
#include <sys/socket.h>
#endif

struct AwebTcpIFace
{
   struct InterfaceData Data;

   ULONG APICALL (*Obtain)(struct AwebTcpIFace *Self);
   ULONG APICALL (*Release)(struct AwebTcpIFace *Self);
   void APICALL (*Expunge)(struct AwebTcpIFace *Self);
   struct Interface * APICALL (*Clone)(struct AwebTcpIFace *Self);
   int APICALL (*a_setup)(struct AwebTcpIFace *Self, struct Library * SocketBase);
   void APICALL (*a_cleanup)(struct AwebTcpIFace *Self, struct Library * SocketBase);
   struct hostent * APICALL (*a_gethostbyname)(struct AwebTcpIFace *Self, char * a, struct Library * SocketBase);
   int APICALL (*a_socket)(struct AwebTcpIFace *Self, int a, int b, int c, struct Library * SocketBase);
   int APICALL (*a_close)(struct AwebTcpIFace *Self, int a, struct Library * SocketBase);
   int APICALL (*a_connect)(struct AwebTcpIFace *Self, int a, struct hostent * hent, int port, struct Library * SocketBase);
   int APICALL (*a_connect2)(struct AwebTcpIFace *Self, int a, int addrtype, u_long addr, int port, struct Library * SocketBase);
   int APICALL (*a_bind)(struct AwebTcpIFace *Self, int a, struct sockaddr * b, int c, struct Library * SocketBase);
   int APICALL (*a_listen)(struct AwebTcpIFace *Self, int a, int b, struct Library * SocketBase);
   int APICALL (*a_accept)(struct AwebTcpIFace *Self, int a, struct sockaddr * b, int * c, struct Library * SocketBase);
   int APICALL (*a_shutdown)(struct AwebTcpIFace *Self, int a, int b, struct Library * SocketBase);
   int APICALL (*a_send)(struct AwebTcpIFace *Self, int a, char * b, int c, int d, struct Library * SocketBase);
   int APICALL (*a_recv)(struct AwebTcpIFace *Self, int a, char * b, int c, int d, struct Library * SocketBase);
   int APICALL (*a_getsockname)(struct AwebTcpIFace *Self, int a, struct sockaddr * b, int * c, struct Library * SocketBase);
   int APICALL (*a_gethostname)(struct AwebTcpIFace *Self, char * a, int b, struct Library * SocketBase);
};

#endif /* AWEBTCP_INTERFACE_DEF_H */
