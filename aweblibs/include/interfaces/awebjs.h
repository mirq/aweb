#ifndef AWEBJS_INTERFACE_DEF_H
#define AWEBJS_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 50.13.
** Do not edit
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_AWEBJS_H
#include <libraries/awebjs.h>
#endif

struct AWebJSIFace
{
        struct InterfaceData Data;

        ULONG APICALL (*Obtain)(struct AWebJSIFace *Self);
        ULONG APICALL (*Release)(struct AWebJSIFace *Self);
        void APICALL (*Expunge)(struct AWebJSIFace *Self);
        struct Interface * APICALL (*Clone)(struct AWebJSIFace *Self);
        struct Jcontext * APICALL (*Newjcontext)(struct AWebJSIFace *Self, UBYTE * screenname);
        void APICALL (*Freejcontext)(struct AWebJSIFace *Self, struct Jcontext * jc);
        BOOL APICALL (*Runjprogram)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * fscope, UBYTE * source, struct Jobject * jthis, struct Jobject ** gwtab, ULONG protkey, ULONG userdata);
        struct Jobject * APICALL (*Newjobject)(struct AWebJSIFace *Self, struct Jcontext * jc);
        void APICALL (*Disposejobject)(struct AWebJSIFace *Self, struct Jobject * jo);
        struct Jobject * APICALL (*AddjfunctionA)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name, void (*code)(struct Jcontext *)  , UBYTE ** args);
        struct Jobject * APICALL (*Addjfunction)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name, void (*code)(struct Jcontext *) , ...);
        struct Jvar * APICALL (*Jfargument)(struct AWebJSIFace *Self, struct Jcontext * jc, long n);
        UBYTE * APICALL (*Jtostring)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv);
        void APICALL (*Jasgstring)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv, UBYTE * string);
        void APICALL (*Jasgobject)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv, struct Jobject * jo);
        void APICALL (*Setjobject)(struct AWebJSIFace *Self, struct Jobject * jo, Objhookfunc * hook, void * internal, Objdisposehookfunc * dispose);
        struct Jvar * APICALL (*Jproperty)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name);
        void APICALL (*Setjproperty)(struct AWebJSIFace *Self, struct Jvar * jv, Varhookfunc * hook, void * hookdata);
        struct Jobject * APICALL (*Jthis)(struct AWebJSIFace *Self, struct Jcontext * jc);
        void * APICALL (*Jointernal)(struct AWebJSIFace *Self, struct Jobject * jo);
        void APICALL (*Jasgboolean)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv, BOOL bvalue);
        BOOL APICALL (*Jtoboolean)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv);
        struct Jobject * APICALL (*Newjarray)(struct AWebJSIFace *Self, struct Jcontext * jc);
        struct Jvar * APICALL (*Jnewarrayelt)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo);
        struct Jobject * APICALL (*Jtoobject)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv);
        long APICALL (*Jtonumber)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv);
        void APICALL (*Jasgnumber)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jvar * jv, long nvalue);
        BOOL APICALL (*Jisarray)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo);
        struct Jobject * APICALL (*Jfindarray)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name);
        void APICALL (*Jsetprototype)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, struct Jobject * proto);
        ULONG APICALL (*Jgetuserdata)(struct AWebJSIFace *Self, struct Jcontext * jc);
        BOOL APICALL (*Jisnumber)(struct AWebJSIFace *Self, struct Jvar * jv);
        void APICALL (*Clearjobject)(struct AWebJSIFace *Self, struct Jobject * jo, UBYTE ** except);
        void APICALL (*Freejobject)(struct AWebJSIFace *Self, struct Jobject * jo);
        void APICALL (*Jdumpobjects)(struct AWebJSIFace *Self, struct Jcontext * jc);
        struct Jvar * APICALL (*Jgetreturnvalue)(struct AWebJSIFace *Self, struct Jcontext * jc);
        void APICALL (*Jpprotect)(struct AWebJSIFace *Self, struct Jvar * var, ULONG protkey);
        void APICALL (*Jcprotect)(struct AWebJSIFace *Self, struct Jcontext * jc, ULONG protkey);
        UBYTE * APICALL (*Jpname)(struct AWebJSIFace *Self, struct Jvar * var);
        Objdisposehookfunc * (*Jdisposehook)(struct AWebJSIFace *Self, struct Jobject * jo) APICALL;
        void APICALL (*Jsetfeedback)(struct AWebJSIFace *Self, struct Jcontext * jc, Jfeedback * jf);
        void APICALL (*Jdebug)(struct AWebJSIFace *Self, struct Jcontext * jc, BOOL debugon);
        void APICALL (*Jerrors)(struct AWebJSIFace *Self, struct Jcontext * jc, BOOL comperrors, long runerrrs, BOOL watch);
        void APICALL (*Jkeepobject)(struct AWebJSIFace *Self, struct Jobject * jo, BOOL used);
        void APICALL (*Jgarbagecollect)(struct AWebJSIFace *Self, struct Jcontext * jc);
        void APICALL (*Jsetlinenumber)(struct AWebJSIFace *Self, struct Jcontext * jc, long linenr);
        void APICALL (*Jsetobjasfunc)(struct AWebJSIFace *Self, struct Jobject * jo, BOOL asfunc);
        void APICALL (*Jsetscreen)(struct AWebJSIFace *Self, struct Jcontext * jc, UBYTE * screenname);
        void APICALL (*Jaddeventhandler)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name, UBYTE * source);
        struct Jvar * APICALL (*Jaddproperty)(struct AWebJSIFace *Self, struct Jcontext * jc, struct Jobject * jo, UBYTE * name);
        struct Jobject * APICALL (*Newjscope)(struct AWebJSIFace *Self,struct Jcontext *jc);
        void APICALL (*Disposejscope)(struct AWebJSIFace *Self, struct Jobject *jo);
        void APICALL (*Jallowgc)(struct AWebJSIFace *Self, struct Jcontext *jc, BOOL allow);

};

#endif /* AWEBJS_INTERFACE_DEF_H */
