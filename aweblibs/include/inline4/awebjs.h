#ifndef INLINE4_AWEBJS_H
#define INLINE4_AWEBJS_H

/*
** This file was auto generated by idltool 50.13.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_AWEBJS_H
#include "libraries/awebjs.h"
#endif

/* Inline macros for Interface "main" */
#define Newjcontext(screenname) IAWebJS->Newjcontext(screenname)
#define Freejcontext(jc) IAWebJS->Freejcontext(jc)
#define Runjprogram(jc, fscope, source, jthis, gwtab, protkey, userdata) IAWebJS->Runjprogram(jc, fscope, source, jthis, gwtab, protkey, userdata)
#define Newjobject(jc) IAWebJS->Newjobject(jc)
#define Disposejobject(jo) IAWebJS->Disposejobject(jo)
#define AddjfunctionA(jc, jo, name, code , args) IAWebJS->AddjfunctionA(jc, jo, name, code , args)
#if !defined(__cplusplus) && (__STDC_VERSION__ >= 199901L || __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95))
#define Addjfunction(jc, jo, name, ...) IAWebJS->Addjfunction(jc, jo, name, __VA_ARGS__)
#endif
#define Jfargument(jc, n) IAWebJS->Jfargument(jc, n)
#define Jtostring(jc, jv) IAWebJS->Jtostring(jc, jv)
#define Jasgstring(jc, jv, string) IAWebJS->Jasgstring(jc, jv, string)
#define Jasgobject(jc, jv, jo) IAWebJS->Jasgobject(jc, jv, jo)
#define Setjobject(jo, hook, internal, dispose) IAWebJS->Setjobject(jo, hook, internal, dispose)
#define Jproperty(jc, jo, name) IAWebJS->Jproperty(jc, jo, name)
#define Setjproperty(jv, hook, hookdata) IAWebJS->Setjproperty(jv, hook, hookdata)
#define Jthis(jc) IAWebJS->Jthis(jc)
#define Jointernal(jo) IAWebJS->Jointernal(jo)
#define Jasgboolean(jc, jv, bvalue) IAWebJS->Jasgboolean(jc, jv, bvalue)
#define Jtoboolean(jc, jv) IAWebJS->Jtoboolean(jc, jv)
#define Newjarray(jc) IAWebJS->Newjarray(jc)
#define Jnewarrayelt(jc, jo) IAWebJS->Jnewarrayelt(jc, jo)
#define Jtoobject(jc, jv) IAWebJS->Jtoobject(jc, jv)
#define Jtonumber(jc, jv) IAWebJS->Jtonumber(jc, jv)
#define Jasgnumber(jc, jv, nvalue) IAWebJS->Jasgnumber(jc, jv, nvalue)
#define Jisarray(jc, jo) IAWebJS->Jisarray(jc, jo)
#define Jfindarray(jc, jo, name) IAWebJS->Jfindarray(jc, jo, name)
#define Jsetprototype(jc, jo, proto) IAWebJS->Jsetprototype(jc, jo, proto)
#define Jgetuserdata(jc) IAWebJS->Jgetuserdata(jc)
#define Jisnumber(jv) IAWebJS->Jisnumber(jv)
#define Clearjobject(jo, except) IAWebJS->Clearjobject(jo, except)
#define Freejobject(jo) IAWebJS->Freejobject(jo)
#define Jdumpobjects(jc) IAWebJS->Jdumpobjects(jc)
#define Jgetreturnvalue(jc) IAWebJS->Jgetreturnvalue(jc)
#define Jpprotect(var, protkey) IAWebJS->Jpprotect(var, protkey)
#define Jcprotect(jc, protkey) IAWebJS->Jcprotect(jc, protkey)
#define Jpname(var) IAWebJS->Jpname(var)
#define Jdisposehook(jo) IAWebJS->Jdisposehook(jo)
#define Jsetfeedback(jc, jf) IAWebJS->Jsetfeedback(jc, jf)
#define Jdebug(jc, debugon) IAWebJS->Jdebug(jc, debugon)
#define Jerrors(jc, comperrors, runerrrs, watch) IAWebJS->Jerrors(jc, comperrors, runerrrs, watch)
#define Jkeepobject(jo, used) IAWebJS->Jkeepobject(jo, used)
#define Jgarbagecollect(jc) IAWebJS->Jgarbagecollect(jc)
#define Jsetlinenumber(jc, linenr) IAWebJS->Jsetlinenumber(jc, linenr)
#define Jsetobjasfunc(jo, asfunc) IAWebJS->Jsetobjasfunc(jo, asfunc)
#define Jsetscreen(jc, screenname) IAWebJS->Jsetscreen(jc, screenname)
#define Jaddeventhandler(jc, jo, name, source) IAWebJS->Jaddeventhandler(jc, jo, name, source)
#define Jaddproperty(jc, jo, name) IAWebJS->Jaddproperty(jc, jo, name)
#define Newjscope(jc) IAWebJS->Newjscope(jc)
#define Disposejscope(jc) IAWebJS->Disposejscope(jc)
#define Jallowgc(jc, allow) IAWebJS->Jallowgc(jc, allow)
#endif /* INLINE4_AWEBJS_H */
